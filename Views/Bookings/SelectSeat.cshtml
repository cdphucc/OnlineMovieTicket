@{
    var showTime = (OnlineMovieTicket.Models.ShowTime)ViewBag.ShowTime;
    var seats = (List<OnlineMovieTicket.Models.Seat>)ViewBag.Seats;
    var bookedSeatIds = (List<int>)ViewBag.BookedSeatIds;
    ViewBag.Title = "Đặt vé";
    var rows = seats.Select(s => s.SeatNumber.Substring(0, 1)).Distinct().OrderBy(x => x).ToList();
    var maxCol = seats.Select(s => int.Parse(s.SeatNumber.Substring(1))).Max();
}

<style>
    .seat-layout-container {
        display: flex;
    }

    .seat-grid {
        display: grid;
        grid-template-columns: 60px repeat( @maxCol, 48px);
        gap: 4px;
        background: #f3ffff;
        border: 1px solid #e0e0e0;
        padding: 10px;
        overflow-x: auto;
    }

    .seat-label {
        width: 60px;
        text-align: center;
        background: #1cb6e0;
        color: #fff;
        border-radius: 4px;
        writing-mode: vertical-lr;
        font-weight: bold;
        padding: 4px 0;
    }

    .seat-cell {
        width: 48px;
        height: 40px;
        background: #e7fcfc;
        border: 1px solid #d9f5f5;
        border-radius: 4px;
        text-align: center;
        vertical-align: middle;
        line-height: 38px;
        font-weight: 500;
        position: relative;
        cursor: pointer;
        transition: border .2s;
        user-select: none;
    }

    .seat-sold {
        background: #f2f2f2;
        color: #aaa;
        border-color: #ccc;
        cursor: not-allowed;
    }

    .seat-selected {
        border: 2px solid #f00;
        color: #d00;
        background: #fff;
        font-weight: bold;
    }

    .screen-header {
        grid-column: 1 / span @((maxCol + 1));
        text-align: center;
        background: #cccccc;
        border-radius: 2px;
        margin-bottom: 8px;
        font-weight: bold;
        padding: 4px 0;
    }

    .ticket-info-box {
        min-width: 220px;
        min-height: 120px;
        border: 2px solid #1976d2;
        border-radius: 8px;
        padding: 6px 10px 14px 10px;
        margin-left: 18px;
        background: #fff;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .seat-checkbox {
        opacity: 0;
        width: 100%;
        height: 100%;
        margin: 0;
        position: absolute;
        left: 0;
        top: 0;
        z-index: 2;
        cursor: pointer;
    }

    .seat-label-number {
        position: relative;
        z-index: 1;
        pointer-events: none;
    }

    #bookBtn {
        width: 100%;
        margin-top: 14px;
    }
</style>

<div class="seat-layout-container">
    <div style="overflow-x:auto; overflow-y:auto; max-width:900px; max-height:520px;">
        <form id="bookingForm" method="post" asp-action="Book" autocomplete="off">
            @Html.AntiForgeryToken()
            <input type="hidden" name="showTimeId" value="@showTime.Id" />
            <div class="seat-grid">
                <div class="screen-header" style="grid-column:1/@((maxCol+2));">Màn Hình</div>
                @foreach (var row in rows)
                {
                    <div class="seat-label">@row<br /><span style="font-size:12px;">@((row == "J") ? "GHẾ ĐÔI" : "GHẾ ĐƠN")</span></div>
                    for (int col = 1; col <= maxCol; col++)
                    {
                        var seatNum = row + col.ToString();
                        var seat = seats.FirstOrDefault(s => s.SeatNumber == seatNum);
                        if (seat == null)
                        {
                            <div style="width:48px;"></div>
                            continue;
                        }
                        bool sold = bookedSeatIds.Contains(seat.Id);
                        <div class="seat-cell @(sold ? "seat-sold" : "")" title="@seat.SeatNumber">
                            <input type="checkbox"
                                   class="seat-checkbox"
                                   name="seatIds"
                                   value="@seat.Id"
                            @(sold ? "disabled" : "")
                                   id="seat_@seat.Id" />
                            <span class="seat-label-number">@seat.SeatNumber</span>
                        </div>
                    }
                }
            </div>
            <!-- Đóng form ở cuối thông tin vé để nút đặt vé nằm trong form-->
            <div style="display:none">
                <button type="submit"></button>
            </div>
        </form>
    </div>
    <div>
        <div class="ticket-info-box">
            <div>
                <b>Thông tin vé</b>
                <div id="ticketInfoContent"></div>
            </div>
            <button type="submit" id="bookBtn" class="btn btn-primary" form="bookingForm">Đặt vé</button>
        </div>
    </div>
</div>

<script>
    const maxSeats = 5;
    const seatPrice = @showTime.Price.ToString(System.Globalization.CultureInfo.InvariantCulture)

    document.querySelectorAll('.seat-checkbox').forEach(cb => {
        cb.addEventListener('change', function() {
            let checked = document.querySelectorAll('.seat-checkbox:checked');
            if (checked.length > maxSeats) {
                this.checked = false;
                alert("Bạn chỉ được chọn tối đa 5 ghế!");
            }
            updateSelected();
            updateTicketInfo();
        });
    });

    function updateSelected() {
        document.querySelectorAll('.seat-cell').forEach(cell => cell.classList.remove('seat-selected'));
        document.querySelectorAll('.seat-checkbox:checked').forEach(cb => {
            cb.closest('.seat-cell').classList.add('seat-selected');
        });
    }
    function formatCurrency(val) {
        return Number(val).toLocaleString('vi-VN') + " đ";
    }
    function updateTicketInfo() {
        let checked = document.querySelectorAll('.seat-checkbox:checked');
        let infoPanel = document.getElementById('ticketInfoContent');
        if (checked.length === 0) {
            infoPanel.innerHTML = "";
        } else {
            let html = "";
            checked.forEach(el => {
                html += `<div>Ghế <b>${el.closest('.seat-cell').innerText.trim()}</b></div>`;
            });
            html += `<div style="margin-top:8px;font-weight:bold;">Tổng: ${formatCurrency(checked.length * seatPrice)}</div>`;
            infoPanel.innerHTML = html;
        }
    }
    updateSelected();
    updateTicketInfo();

        document.getElementById('bookingForm').addEventListener('submit', function (e) {
        e.preventDefault();
        const formData = new FormData(this);
        fetch('/Bookings/Book', {
            method: 'POST',
            body: formData,
            headers: {
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            }
        })
        .then(r => r.json())
        .then(data => {
            if (data.success && data.redirectUrl) {
                window.location.href = data.redirectUrl;
            } else {
                alert("Đặt vé thất bại: " + data.message);
            }
        });
    });
</script>