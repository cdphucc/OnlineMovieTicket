@model OnlineMovieTicket.Models.ViewModels.EditUserViewModel
@{
    ViewData["Title"] = "Edit User";
}

<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="h3 mb-1">
                        <i class="fas fa-user-edit text-primary me-2"></i>Edit User Profile
                    </h2>
                    <p class="text-muted mb-0">Manage user information and permissions</p>
                </div>
                <div>
                    <span class="badge bg-light text-dark fs-6">ID: @Model.Id</span>
                </div>
            </div>

            <!-- Alerts -->
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ResetPasswordSuccess"] != null)
            {
                <div class="alert alert-info alert-dismissible fade show" role="alert">
                    <i class="fas fa-key me-2"></i>@TempData["ResetPasswordSuccess"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Main Form -->
            <form method="post" asp-action="EditUser" id="editUserForm">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />

                <div class="row">
                    <!-- Left Column - Personal Information -->
                    <div class="col-lg-8">
                        <div class="card shadow-sm mb-4">
                            <div class="card-header bg-light">
                                <h5 class="card-title mb-0">
                                    <i class="fas fa-user me-2"></i>Personal Information
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row g-3">
                                    <!-- Full Name -->
                                    <div class="col-md-6">
                                        <label for="fullName" class="form-label fw-semibold">
                                            Full Name <span class="text-danger">*</span>
                                        </label>
                                        <input type="text" class="form-control" id="fullName" name="fullName"
                                               value="@Model.FullName" required maxlength="100">
                                    </div>

                                    <!-- Email (Read-only) -->
                                    <div class="col-md-6">
                                        <label class="form-label fw-semibold">
                                            Email Address
                                            <span class="badge bg-secondary ms-2">Read Only</span>
                                        </label>
                                        <input type="email" class="form-control bg-light"
                                               value="@Model.Email" readonly>
                                        <small class="text-muted">Email cannot be changed for security reasons</small>
                                    </div>

                                    <!-- Phone Number -->
                                    <div class="col-md-6">
                                        <label for="phoneNumber" class="form-label fw-semibold">Phone Number</label>
                                        <input type="tel" class="form-control" id="phoneNumber" name="phoneNumber"
                                               value="@Model.PhoneNumber" maxlength="20">
                                    </div>

                                    <!-- Gender -->
                                    <div class="col-md-6">
                                        <label for="gender" class="form-label fw-semibold">
                                            Gender <span class="text-danger">*</span>
                                        </label>
                                        <select class="form-select" id="gender" name="gender" required>
                                            <option value="">Select Gender</option>
                                            @{
                                                var genders = new[] { "Male", "Female", "Other" };
                                                foreach (var genderOption in genders)
                                                {
                                                    if (Model.Gender == genderOption)
                                                    {
                                                        <option value="@genderOption" selected>@genderOption</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@genderOption">@genderOption</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>

                                    <!-- Date of Birth -->
                                    <div class="col-md-6">
                                        <label for="dateOfBirth" class="form-label fw-semibold">
                                            Date of Birth <span class="text-danger">*</span>
                                        </label>
                                        <input type="date" class="form-control" id="dateOfBirth" name="dateOfBirth"
                                               value="@Model.DateOfBirth?.ToString("yyyy-MM-dd")" required>
                                    </div>

                                    <!-- Address -->
                                    <div class="col-12">
                                        <label for="address" class="form-label fw-semibold">Address</label>
                                        <input type="text" class="form-control" id="address" name="address" value="@Model.Address"
                                                  maxlength="500"></input>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Role & Security -->
                        <div class="card shadow-sm mb-4">
                            <div class="card-header bg-warning bg-opacity-10">
                                <h5 class="card-title mb-0 text-warning-emphasis">
                                    <i class="fas fa-shield-alt me-2"></i>Role & Security
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row g-3">
                                    <!-- Role -->
                                    <div class="col-md-6">
                                        <label for="role" class="form-label fw-semibold">
                                            User Role <span class="text-danger">*</span>
                                        </label>
                                        <select class="form-select" id="role" name="role" required>
                                            @if (ViewBag.Roles != null)
                                            {
                                                @foreach (var roleOption in ViewBag.Roles as List<OnlineMovieTicket.Models.UserRole>)
                                                {
                                                    if (Model.Role == roleOption)
                                                    {
                                                        <option value="@roleOption" selected>@roleOption</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@roleOption">@roleOption</option>
                                                    }
                                                }
                                            }
                                        </select>
                                        <small class="text-muted">Admin role has full system access</small>
                                    </div>

                                    <!-- Email Confirmed -->
                                    <div class="col-md-6">
                                        <label class="form-label fw-semibold">Email Verification</label>
                                        <div class="form-check form-switch mt-2">
                                            @if (Model.EmailConfirmed)
                                            {
                                                <input class="form-check-input" type="checkbox"
                                                       id="emailConfirmed" name="emailConfirmed" value="true" checked>
                                            }
                                            else
                                            {
                                                <input class="form-check-input" type="checkbox"
                                                       id="emailConfirmed" name="emailConfirmed" value="true">
                                            }
                                            <label class="form-check-label" for="emailConfirmed">
                                                Email is verified
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Right Column - System Info & Actions -->
                    <div class="col-lg-4">
                        <!-- System Information -->
                        <div class="card shadow-sm mb-4">
                            <div class="card-header bg-info bg-opacity-10">
                                <h6 class="card-title mb-0 text-info-emphasis">
                                    <i class="fas fa-info-circle me-2"></i>System Information
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label class="form-label text-muted small">Created At</label>
                                    <div class="fw-medium">@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</div>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label text-muted small">Last Updated</label>
                                    <div class="fw-medium">@(Model.UpdatedAt?.ToString("yyyy-MM-dd HH:mm:ss") ?? "Never")</div>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label text-muted small">Created By</label>
                                    <div class="fw-medium">@(Model.CreatedBy ?? "System")</div>
                                </div>
                                <div>
                                    <label class="form-label text-muted small">Updated By</label>
                                    <div class="fw-medium">@(Model.UpdatedBy ?? "N/A")</div>
                                </div>
                            </div>
                        </div>

                        <!-- Actions -->
                        <div class="card shadow-sm">
                            <div class="card-header">
                                <h6 class="card-title mb-0">Actions</h6>
                            </div>
                            <div class="card-body">
                                <!-- Save Button -->
                                <button type="submit" class="btn btn-success w-100 mb-3" id="saveBtn">
                                    <i class="fas fa-save me-2"></i>Save All Changes
                                </button>

                                <!-- Reset Password -->
                                <button type="button" class="btn btn-warning w-100 mb-3"
                                        onclick="resetPassword('@Model.Id')">
                                    <i class="fas fa-key me-2"></i>Reset Password
                                </button>

                                <!-- Back to Users -->
                                <a href="@Url.Action("UserManagement")" class="btn btn-secondary w-100 mb-3">
                                    <i class="fas fa-arrow-left me-2"></i>Back to Users
                                </a>

                                <!-- Delete User -->
                                <button type="button" class="btn btn-danger w-100"
                                        onclick="confirmDelete('@Model.Id', '@Model.FullName')">
                                    <i class="fas fa-trash me-2"></i>Delete User
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this user?</p>
                <div class="alert alert-light">
                    <strong id="deleteUserName"></strong><br>
                    <small class="text-muted">@Model.Email</small>
                </div>
                <p class="text-danger mb-0">
                    <i class="fas fa-exclamation-triangle me-1"></i>
                    This action cannot be undone.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" asp-action="DeleteUser" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="deleteUserId" />
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-1"></i>Delete Permanently
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Form submission handling
        document.getElementById('editUserForm').addEventListener('submit', function(e) {
            const saveBtn = document.getElementById('saveBtn');
            saveBtn.disabled = true;
            saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Saving...';
        });

        // Reset password function
        function resetPassword(userId) {
            if (confirm('Are you sure you want to reset this user\'s password? A new random password will be generated.')) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("ResetPassword")';

                const antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = antiForgeryToken;

                const idInput = document.createElement('input');
                idInput.type = 'hidden';
                idInput.name = 'id';
                idInput.value = userId;

                form.appendChild(tokenInput);
                form.appendChild(idInput);
                document.body.appendChild(form);
                form.submit();
            }
        }

        // Delete confirmation function
        function confirmDelete(userId, userName) {
            document.getElementById('deleteUserId').value = userId;
            document.getElementById('deleteUserName').textContent = userName;

            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }

        // Phone number formatting
        document.getElementById('phoneNumber').addEventListener('input', function() {
            let value = this.value.replace(/\D/g, '');
            if (value.length >= 10) {
                value = value.replace(/(\d{3})(\d{3})(\d{4})/, '($1) $2-$3');
                this.value = value;
            }
        });
    </script>

    <style>
        .card {
            border: none;
            border-radius: 12px;
        }

        .card-header {
            border-radius: 12px 12px 0 0 !important;
            border-bottom: 1px solid rgba(0,0,0,0.125);
        }

        .form-control:focus, .form-select:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
        }

        .btn {
            border-radius: 8px;
        }

        .shadow-sm {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
        }

        .bg-opacity-10 {
            --bs-bg-opacity: 0.1;
        }
    </style>
}